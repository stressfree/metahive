<jsp:root xmlns:c="http://java.sun.com/jsp/jstl/core" xmlns:field="urn:jsptagdir:/WEB-INF/tags/form/fields" xmlns:fn="http://java.sun.com/jsp/jstl/functions" xmlns:spring="http://www.springframework.org/tags" xmlns:form="http://www.springframework.org/tags/form" xmlns:jsp="http://java.sun.com/JSP/Page" version="2.0">
  <jsp:output omit-xml-declaration="yes" />

  <jsp:directive.attribute name="id" type="java.lang.String" required="true" rtexprvalue="true" description="The identifier for this tag (do not change!)" />
  <jsp:directive.attribute name="field" type="java.lang.String" required="true" rtexprvalue="true" description="The field exposed from the form backing object" />
  <jsp:directive.attribute name="path" type="java.lang.String" required="true" rtexprvalue="true" description="The relative path to the referenced resource" />
  <jsp:directive.attribute name="items" type="java.util.Collection" required="true" rtexprvalue="true" description="The name of the collection displayed in the select box" />
  <jsp:directive.attribute name="cssClass" type="java.lang.String" required="false" rtexprvalue="true" description="Extra css classes which should be appended to the containing div" />
  <jsp:directive.attribute name="label" type="java.lang.String" required="false" rtexprvalue="true" description="The label used for this field, will default to a message bundle if not supplied" />
  <jsp:directive.attribute name="itemLabel" type="java.lang.String" required="false" rtexprvalue="true" description="Name of the property mapped to the inner text of the 'option' tag (will override the configured converter)" />
  <jsp:directive.attribute name="itemValue" type="java.lang.String" required="false" rtexprvalue="true" description="The identifier used as value in the select box (defaults to 'id' for non enum types)" />
  <jsp:directive.attribute name="required" type="java.lang.Boolean" required="false" rtexprvalue="true" description="Indicates if this field is required (default false)" />
  <jsp:directive.attribute name="disabled" type="java.lang.Boolean" required="false" rtexprvalue="true" description="Specify if this field should be enabled" />
  <jsp:directive.attribute name="render" type="java.lang.Boolean" required="false" rtexprvalue="true" description="Indicate if the contents of this tag and all enclosed tags should be rendered (default 'true')" />
  <jsp:directive.attribute name="z" type="java.lang.String" required="false" description="Used for checking if element has been modified (to recalculate simply provide empty string value)" />

  <c:if test="${empty render or render}">

    <c:if test="${empty disabled}">
      <c:set value="false" var="disabled" />
    </c:if>

    <c:if test="${empty label}">
      <spring:message code="label_${fn:toLowerCase(fn:substringAfter(id,'_'))}" var="label" htmlEscape="false" />
    </c:if>

    <c:if test="${empty required}">
      <c:set value="false" var="required" />
    </c:if>
    
    <c:if test="${not empty cssClass}">
      <c:set var="sec_cssClass">
      	<spring:escapeBody javaScriptEscape="true" >${cssClass}</spring:escapeBody>
      </c:set>
    </c:if>
    
    <c:set var="sec_field">
      <spring:escapeBody javaScriptEscape="true" >${field}</spring:escapeBody>
    </c:set>

    <c:set var="sec_itemLabel">
      <spring:escapeBody htmlEscape="true" >${itemLabel}</spring:escapeBody>
    </c:set>

	<c:set var="div_id">
		_<spring:escapeBody javaScriptEscape="true" >${id}</spring:escapeBody>_id
	</c:set>

    <div id="${div_id}" class="field field-multiselect">
      <c:choose>
        <c:when test="${not empty items}">
          <label for="_${sec_field}_id">
            <c:out value="${fn:escapeXml(label)}" />:
          </label>
          <div class="multiselectItems ${sec_cssClass}">
          	<form:checkboxes id="${div_id}_checkbox" path="${sec_field}" items="${items}" itemLabel="${sec_itemLabel}" itemValue="${fn:escapeXml(itemValue)}" cssClass="multiselectItem" />
          	<div class="clear"><!-- --></div>
          	
          	<script type="text/javascript">
          	dojo.query("#${div_id} input[type='checkbox']").forEach(function(element) {
                Spring.addDecoration(new Spring.ElementDecoration({
                    elementId: element.id,
                    widgetType : "dijit.form.CheckBox",
                    widgetAttrs : { checked : element.checked }
                }));
            });
          	</script>
          </div>
          <form:errors cssClass="errors" id="_${sec_field}_error_id" path="${sec_field}" />
        </c:when>
        <c:otherwise>
          <field:reference field="${label}" id="${id}" path="${path}" required="${required}" />
        </c:otherwise>
      </c:choose>
    </div>

  </c:if>
</jsp:root>